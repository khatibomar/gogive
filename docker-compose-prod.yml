version: '3.9'

services:
  backend:
    build:
      context: . 
      dockerfile: Dockerfile
    restart: unless-stopped
    secrets:
      - GOGIVE_DB_DSN
      - GO_SMTP_USERNAME
      - GO_SMTP_PASSWORD
    args:
        GO_PORT: ${go_port:-4000} 
        GO_ENV: "production" 
        GO_DB_MAX_OPEN_CONNS: ${GO_DB_MAX_OPEN_CONNS:-25}
        GO_DB_MAX_IDLE_CONNS: ${GO_DB_MAX_IDLE_CONNS:-25}
        GO_DB_MAX_IDLE_TIME: ${GO_DB_MAX_IDLE_TIME:-15m}
        GO_RATE_LIMITER_RPS: ${GO_RATE_LIMITER_RPS:-2}
        GO_RATE_LIMITER_BURST: ${GO_RATE_LIMITER_BURST:-4}
        GO_RATE_LIMITER_ENABLED: ${GO_RATE_LIMITER_ENABLED:-true}
        GO_SMTP_HOST: ${GO_SMTP_HOST:-localhost}
        GO_SMTP_PORT: ${GO_SMTP_PORT:-1025}
        GO_SMTP_USERNAME: ${GO_SMTP_USERNAME}
        GO_SMTP_PASSWORD: ${GO_SMTP_PASSWORD}
        GO_SMTP_SENDER: ${GO_SMTP_SENDER:-"GoGive <no-reply@gogive.com>"}
    environment:
      GOGIVE_DB_DSN: GOGIVE_DB_DSN
    depends_on: 
      - postgres
    networks:
      - backend
  postgres:
    container_name: postgres
    image: postgres
    user: ${USERID}:${GROUPIP}
    secrets:
     - POSTGRES_PASSWORD
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD_FILE=/run/secrets/POSTGRES_PASSWORD
     - POSTGRES_DB=${POSTGRES_DB}
    volumes: 
     - pgdata:/var/lib/postgresql/data:rw
     - ./config/postgres/config.conf:/etc/postgresql/postgresql.conf
    networks:
      - backend

volumes:
 pgdata:

networks:
  backend:
